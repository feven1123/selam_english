// schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // or "mysql" if you prefer
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  role      String   @default("user") // "user" or "admin"
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  coursesEnrolled CourseEnrollment[]
  liveSessions    LiveSessionEnrollment[]
}

model Course {
  id          Int       @id @default(autoincrement())
  title       String
  description String
  image       String?   // optional image URL
  isFree      Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  // Relations
  enrollments CourseEnrollment[]
  lessons     Lesson[]   // <-- Add this
}
model Lesson {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  course    Course   @relation(fields: [courseId], references: [id])
  courseId  Int
  createdAt DateTime @default(now())
}

model CourseEnrollment {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  course    Course   @relation(fields: [courseId], references: [id])
  courseId  Int
  enrolledAt DateTime @default(now())
}

model Book {
  id          Int      @id @default(autoincrement())
  title       String
  author      String
  description String?
  fileUrl     String   // link to PDF or eBook file
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model LiveSession {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  link        String   // Zoom/GoogleMeet/Other URL
  scheduledAt DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  participants LiveSessionEnrollment[]
}

model LiveSessionEnrollment {
  id            Int          @id @default(autoincrement())
  user          User         @relation(fields: [userId], references: [id])
  userId        Int
  liveSession   LiveSession  @relation(fields: [liveSessionId], references: [id])
  liveSessionId Int
  joinedAt      DateTime     @default(now())
}
